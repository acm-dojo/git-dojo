#!/mnt/sudo/python

import os
from git import Repo  # type: ignore

REPO_PATH = "/home/hacker/dojo-ignore"

EXPECTED_TRACKED = [
    ".gitignore",
    "important.log",
    "src/code.cpp",
    "metadata.txt",
]
EXPECTED_IGNORED = [
    "debug.log",
    "logs/log1.log",
    "logs/log2.log",
    "temp/foo.in",
    "temp/bar.out",
    "src/utils1.o",
    "src/utils2.o",
    "ignore.txt"
]

repo = Repo(REPO_PATH)

# 获取所有已提交文件（不包括之前的提交，只看最新提交）
latest_commit = list(repo.iter_commits("main"))[0]
committed_files = [item.a_path for item in latest_commit.tree.traverse() if item.type == "blob"]

# 获取所有工作区未跟踪文件（即被 .gitignore 忽略的）
untracked_files = repo.untracked_files

# 检查被忽略的文件是否都没被提交
for f in EXPECTED_IGNORED:
    if f in committed_files:
        raise ValueError(f"被忽略文件 {f} 不应该被提交进仓库。请检查你的 .gitignore 规则。")

# 检查被跟踪的关键文件是否提交
for f in EXPECTED_TRACKED:
    if f not in committed_files:
        raise ValueError(f"关键文件 {f} 未被提交。请检查你的 .gitignore 规则。")

# 检查工作区是否干净
if repo.is_dirty(untracked_files=True):
    raise RuntimeError("工作区不干净。请确保所有需提交的文件都已提交。")

print("挑战完成！你的 .gitignore 实际效果完全正确。")
with open("/flag", "r", encoding="utf-8") as flag_file:
    print(flag_file.read().strip())